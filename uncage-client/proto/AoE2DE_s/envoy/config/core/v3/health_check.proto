syntax = "proto3";

package envoy.config.core.v3;

import "envoy/config/core/v3/base.proto";
import "envoy/config/core/v3/event_service_config.proto";
import "envoy/type/matcher/v3/string.proto";
import "envoy/type/v3/http.proto";
import "envoy/type/v3/range.proto";
import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";
import "udpa/annotations/status.proto";
import "udpa/annotations/versioning.proto";
import "validate/validate.proto";

option go_package = "github.com/envoyproxy/go-control-plane/envoy/config/core/v3;corev3";
option java_multiple_files = true;
option java_outer_classname = "HealthCheckProto";
option java_package = "io.envoyproxy.envoy.config.core.v3";

message HealthStatusSet {
    repeated HealthStatus statuses = 1;
}

message HealthCheck {
    google.protobuf.Duration timeout = 1;
    google.protobuf.Duration interval = 2;
    google.protobuf.Duration initial_jitter = 20;
    google.protobuf.Duration interval_jitter = 3;
    uint32 interval_jitter_percent = 18;
    google.protobuf.UInt32Value unhealthy_threshold = 4;
    google.protobuf.UInt32Value healthy_threshold = 5;
    google.protobuf.UInt32Value alt_port = 6;
    google.protobuf.BoolValue reuse_connection = 7;
    google.protobuf.Duration no_traffic_interval = 12;
    google.protobuf.Duration no_traffic_healthy_interval = 24;
    google.protobuf.Duration unhealthy_interval = 14;
    google.protobuf.Duration unhealthy_edge_interval = 15;
    google.protobuf.Duration healthy_edge_interval = 16;
    string event_log_path = 17;
    EventServiceConfig event_service = 22;
    bool always_log_health_check_failures = 19;
    
    TlsOptions tls_options = 21;
    message TlsOptions {
        repeated string alpn_protocols = 1;
    }
    
    google.protobuf.Struct transport_socket_match_criteria = 23;
    
    oneof health_checker {
        HttpHealthCheck http_health_check = 8;
        TcpHealthCheck tcp_health_check = 9;
        GrpcHealthCheck grpc_health_check = 11;
        CustomHealthCheck custom_health_check = 13;
    }
    
    reserved 10;
    
    message Payload {
        oneof payload {
            string text = 1;
            bytes binary = 2;
        }
    }
    
    message HttpHealthCheck {
        string host = 1;
        string path = 2;
        Payload send = 3;
        Payload receive = 4;
        repeated HeaderValueOption request_headers_to_add = 6;
        repeated string request_headers_to_remove = 8;
        repeated type.v3.Int64Range expected_statuses = 9;
        repeated type.v3.Int64Range retriable_statuses = 12;
        type.v3.CodecClientType codec_client_type = 10;
        type.matcher.v3.StringMatcher service_name_matcher = 11;
        
        reserved 5, 7, "service_name", "use_http2";
    }
    
    message TcpHealthCheck {
        Payload send = 1;
        repeated Payload receive = 2;
    }
    
    message RedisHealthCheck {
        string key = 1;
    }
    
    message GrpcHealthCheck {
        string service_name = 1;
        string authority = 2;
        repeated HeaderValueOption initial_metadata = 3;
    }
    
    message CustomHealthCheck {
        string name = 1;
        
        oneof config_type {
            google.protobuf.Any typed_config = 3;
        }
        
        reserved 2, "config";
    }
}

enum HealthStatus {
    UNKNOWN = 0;
    HEALTHY = 1;
    UNHEALTHY = 2;
    DRAINING = 3;
    TIMEOUT = 4;
    DEGRADED = 5;
}
